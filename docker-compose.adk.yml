version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      - backend
      - adk-orchestrator
    environment:
      - NODE_ENV=production
      - REACT_APP_ADK_ENABLED=true
      - REACT_APP_API_URL=http://backend:8000
      - REACT_APP_ADK_URL=http://adk-orchestrator:8080
    networks:
      - parallax-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - adk-orchestrator
    environment:
      - ENV=production
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/parallaxpal
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=30
      - ADK_ENABLED=true
      - ADK_ORCHESTRATOR_URL=http://adk-orchestrator:8080
    volumes:
      - ./logs:/app/logs
    networks:
      - parallax-network

  adk-orchestrator:
    build:
      context: .
      dockerfile: Dockerfile.adk
    ports:
      - "8080:8080"
    environment:
      - ADK_PROJECT_ID=parallaxmind
      - ADK_REGION=us-central1
      - ADK_DEV_MODE=true
      - ADK_LOCAL_TESTING=true
      - GOOGLE_APPLICATION_CREDENTIALS=/adk/credentials/service-account.json
      - PYTHONUNBUFFERED=1
    volumes:
      - ./agents:/adk/agents
      - ./schemas:/adk/schemas
      - ./tools:/adk/tools
      - ./adk_config.py:/adk/adk_config.py
      - ./adk-spec.yaml:/adk/adk-spec.yaml
      - ./credentials:/adk/credentials
    networks:
      - parallax-network

  retrieval-agent:
    build:
      context: .
      dockerfile: Dockerfile.adk
    depends_on:
      - adk-orchestrator
    environment:
      - ADK_AGENT_ID=retrieval_agent
      - ADK_PROJECT_ID=parallaxmind
      - ADK_REGION=us-central1
      - ADK_ORCHESTRATOR_URL=http://adk-orchestrator:8080
      - GOOGLE_APPLICATION_CREDENTIALS=/adk/credentials/service-account.json
      - PYTHONUNBUFFERED=1
    volumes:
      - ./agents:/adk/agents
      - ./schemas:/adk/schemas
      - ./tools:/adk/tools
      - ./adk_config.py:/adk/adk_config.py
      - ./credentials:/adk/credentials
    networks:
      - parallax-network

  analysis-agent:
    build:
      context: .
      dockerfile: Dockerfile.adk
    depends_on:
      - adk-orchestrator
    environment:
      - ADK_AGENT_ID=analysis_agent
      - ADK_PROJECT_ID=parallaxmind
      - ADK_REGION=us-central1
      - ADK_ORCHESTRATOR_URL=http://adk-orchestrator:8080
      - GOOGLE_APPLICATION_CREDENTIALS=/adk/credentials/service-account.json
      - PYTHONUNBUFFERED=1
    volumes:
      - ./agents:/adk/agents
      - ./schemas:/adk/schemas
      - ./tools:/adk/tools
      - ./adk_config.py:/adk/adk_config.py
      - ./credentials:/adk/credentials
    networks:
      - parallax-network

  citation-agent:
    build:
      context: .
      dockerfile: Dockerfile.adk
    depends_on:
      - adk-orchestrator
    environment:
      - ADK_AGENT_ID=citation_agent
      - ADK_PROJECT_ID=parallaxmind
      - ADK_REGION=us-central1
      - ADK_ORCHESTRATOR_URL=http://adk-orchestrator:8080
      - GOOGLE_APPLICATION_CREDENTIALS=/adk/credentials/service-account.json
      - PYTHONUNBUFFERED=1
    volumes:
      - ./agents:/adk/agents
      - ./schemas:/adk/schemas
      - ./tools:/adk/tools
      - ./adk_config.py:/adk/adk_config.py
      - ./credentials:/adk/credentials
    networks:
      - parallax-network

  knowledge-graph-agent:
    build:
      context: .
      dockerfile: Dockerfile.adk
    depends_on:
      - adk-orchestrator
    environment:
      - ADK_AGENT_ID=knowledge_graph_agent
      - ADK_PROJECT_ID=parallaxmind
      - ADK_REGION=us-central1
      - ADK_ORCHESTRATOR_URL=http://adk-orchestrator:8080
      - GOOGLE_APPLICATION_CREDENTIALS=/adk/credentials/service-account.json
      - PYTHONUNBUFFERED=1
    volumes:
      - ./agents:/adk/agents
      - ./schemas:/adk/schemas
      - ./tools:/adk/tools
      - ./adk_config.py:/adk/adk_config.py
      - ./credentials:/adk/credentials
    networks:
      - parallax-network

  ui-agent:
    build:
      context: .
      dockerfile: Dockerfile.adk
    depends_on:
      - adk-orchestrator
    environment:
      - ADK_AGENT_ID=ui_agent
      - ADK_PROJECT_ID=parallaxmind
      - ADK_REGION=us-central1
      - ADK_ORCHESTRATOR_URL=http://adk-orchestrator:8080
      - GOOGLE_APPLICATION_CREDENTIALS=/adk/credentials/service-account.json
      - PYTHONUNBUFFERED=1
    volumes:
      - ./agents:/adk/agents
      - ./schemas:/adk/schemas
      - ./tools:/adk/tools
      - ./adk_config.py:/adk/adk_config.py
      - ./credentials:/adk/credentials
    networks:
      - parallax-network

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=parallaxpal
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - parallax-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - parallax-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - parallax-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - parallax-network

volumes:
  postgres-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  parallax-network:
    driver: bridge